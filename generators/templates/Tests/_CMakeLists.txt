enable_testing()

<%_ if(packages.length >= 1) { -%>
<%_ packages.forEach(function(pkg) { -%>
find_package(<%= pkg.name %><%_ if (pkg.vcpkg) { %> CONFIG<% } %> <%_ if (pkg.required) { %> REQUIRED<% } %>)
<%_ }) -%>
<%_ } -%>

file(GLOB_RECURSE <%= cmake_prefix %>TEST_SOURCES
  "${CMAKE_CURRENT_SOURCE_DIR}/<%= source_prefix %>/*.h"
  "${CMAKE_CURRENT_SOURCE_DIR}/<%= source_prefix %>/*.cc"
  "${CMAKE_CURRENT_SOURCE_DIR}/<%= source_prefix %>/**/*.h"
  "${CMAKE_CURRENT_SOURCE_DIR}/<%= source_prefix %>/**/*.cc")

<%_ if (executable) { -%>
add_executable(<%= target_name %>
  main.cc
  ${<%= cmake_prefix %>TEST_SOURCES})
<%_ } else { -%>
add_library(<%= target_name %>
  ${<%= cmake_prefix %>TEST_SOURCES})
<%_ } -%>
target_include_directories(<%= target_name %>
  PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}
         ${CMAKE_CURRENT_BINARY_DIR})
target_compile_options(<%= target_name %>
  PUBLIC ${<%= cmake_prefix %>COMPILE_OPTIONS})
<%_ if(packages.length >= 1) { -%>
target_link_libraries(<%= target_name %>
  PUBLIC <%= lib_name -%> <%= packages.filter((pkg) => pkg.link).flatMap((pkg) => pkg.link).join(" ") -%>)
<%_ } -%>

<%_ if(clang) { -%>
if(ENABLE_COVERAGE)
  create_coverage_target(<%= target_name %> ${<%= cmake_prefix %>TEST_SOURCES})
endif()
<%_ } -%>